// <auto-generated />
using DocumentManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocumentManagement.Migrations
{
    [DbContext(typeof(DocumentManagementContext))]
    partial class DocumentManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DocumentManagement.Models.Company", b =>
                {
                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Party_ID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Party_ID = 5,
                            Address = "E-11",
                            Email = "ba@tech.com",
                            Name = "BA Tech",
                            PhoneNo = "080088801"
                        });
                });

            modelBuilder.Entity("DocumentManagement.Models.Department", b =>
                {
                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.Property<int>("Company_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Party_ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Party_ID = 6,
                            Company_ID = 5,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("DocumentManagement.Models.Document", b =>
                {
                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.Property<int>("Company_ID")
                        .HasColumnType("int");

                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Party_ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("DocumentManagement.Models.Party", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PartyRole_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PartyRole_Id");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PartyRole_Id = 1
                        },
                        new
                        {
                            ID = 2,
                            PartyRole_Id = 2
                        },
                        new
                        {
                            ID = 3,
                            PartyRole_Id = 3
                        },
                        new
                        {
                            ID = 4,
                            PartyRole_Id = 4
                        },
                        new
                        {
                            ID = 5,
                            PartyRole_Id = 7
                        },
                        new
                        {
                            ID = 6,
                            PartyRole_Id = 6
                        });
                });

            modelBuilder.Entity("DocumentManagement.Models.PartyRelationship", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByParty_ID")
                        .HasColumnType("int");

                    b.Property<int>("FromPartyRole_ID")
                        .HasColumnType("int");

                    b.Property<int>("FromParty_ID")
                        .HasColumnType("int");

                    b.Property<string>("Relation_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToPartyRole_ID")
                        .HasColumnType("int");

                    b.Property<int>("ToParty_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PartyRelationships");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedByParty_ID = 1,
                            FromPartyRole_ID = 1,
                            FromParty_ID = 1,
                            Relation_Type = "C",
                            ToPartyRole_ID = 2,
                            ToParty_ID = 2
                        },
                        new
                        {
                            ID = 2,
                            CreatedByParty_ID = 1,
                            FromPartyRole_ID = 2,
                            FromParty_ID = 2,
                            Relation_Type = "C",
                            ToPartyRole_ID = 3,
                            ToParty_ID = 3
                        },
                        new
                        {
                            ID = 3,
                            CreatedByParty_ID = 1,
                            FromPartyRole_ID = 3,
                            FromParty_ID = 3,
                            Relation_Type = "C",
                            ToPartyRole_ID = 4,
                            ToParty_ID = 4
                        },
                        new
                        {
                            ID = 4,
                            CreatedByParty_ID = 1,
                            FromPartyRole_ID = 1,
                            FromParty_ID = 1,
                            Relation_Type = "C",
                            ToPartyRole_ID = 7,
                            ToParty_ID = 5
                        },
                        new
                        {
                            ID = 5,
                            CreatedByParty_ID = 1,
                            FromPartyRole_ID = 2,
                            FromParty_ID = 2,
                            Relation_Type = "C",
                            ToPartyRole_ID = 6,
                            ToParty_ID = 6
                        });
                });

            modelBuilder.Entity("DocumentManagement.Models.PartyRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PartyRoles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "SuperAdmin",
                            Type = "SA"
                        },
                        new
                        {
                            ID = 2,
                            Name = "CompanyAdmin",
                            Type = "CA"
                        },
                        new
                        {
                            ID = 3,
                            Name = "DepartmentHead",
                            Type = "DH"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Employee",
                            Type = "EE"
                        },
                        new
                        {
                            ID = 5,
                            Name = "User",
                            Type = "UR"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Department",
                            Type = "DT"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Company",
                            Type = "CO"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Document",
                            Type = "DO"
                        });
                });

            modelBuilder.Entity("DocumentManagement.Models.User", b =>
                {
                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.Property<int>("Company_ID")
                        .HasColumnType("int");

                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Party_ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Party_ID = 1,
                            Company_ID = 0,
                            Department_ID = 0,
                            Password = "sa",
                            UserName = "sa"
                        },
                        new
                        {
                            Party_ID = 2,
                            Company_ID = 5,
                            Department_ID = 0,
                            Password = "baadmin",
                            UserName = "baadmin"
                        },
                        new
                        {
                            Party_ID = 3,
                            Company_ID = 5,
                            Department_ID = 6,
                            Password = "bahradmin",
                            UserName = "bahradmin"
                        },
                        new
                        {
                            Party_ID = 4,
                            Company_ID = 5,
                            Department_ID = 6,
                            Password = "bahremp",
                            UserName = "bahremp"
                        });
                });

            modelBuilder.Entity("DocumentManagement.Models.Company", b =>
                {
                    b.HasOne("DocumentManagement.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagement.Models.Department", b =>
                {
                    b.HasOne("DocumentManagement.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagement.Models.Document", b =>
                {
                    b.HasOne("DocumentManagement.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagement.Models.Party", b =>
                {
                    b.HasOne("DocumentManagement.Models.PartyRole", "PartyRole")
                        .WithMany()
                        .HasForeignKey("PartyRole_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagement.Models.User", b =>
                {
                    b.HasOne("DocumentManagement.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
